{"id":"processing.js","dependencies":[{"name":"/home/alex/git/puzzle-hunt-scoreboard/package.json","includedInParent":true,"mtime":1656824778921},{"name":"distinct-colors","loc":{"line":1,"column":27,"index":27},"parent":"/home/alex/git/puzzle-hunt-scoreboard/public/processing.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/distinct-colors/lib/index.js"},{"name":"@firebase/database","loc":{"line":2,"column":25,"index":70},"parent":"/home/alex/git/puzzle-hunt-scoreboard/public/processing.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/@firebase/database/dist/index.esm2017.js"},{"name":"./firebase","loc":{"line":3,"column":19,"index":111},"parent":"/home/alex/git/puzzle-hunt-scoreboard/public/processing.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/public/firebase.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStats = getStats;\n\nvar _distinctColors = _interopRequireDefault(require(\"distinct-colors\"));\n\nvar _database = require(\"@firebase/database\");\n\nvar _firebase = require(\"./firebase\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction time_in_minutes(timestr) {\n  if (!timestr) {\n    return -1;\n  }\n\n  var hrs_mins = timestr.split(\":\");\n  var hrs = parseInt(hrs_mins[0]);\n  var mins = parseInt(hrs_mins[1]);\n  return 60 * hrs + mins;\n}\n\nfunction getTeams() {\n  return _getTeams.apply(this, arguments);\n}\n\nfunction _getTeams() {\n  _getTeams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var dbRef, snapshot;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbRef = (0, _database.ref)(_firebase.db);\n            _context.next = 3;\n            return (0, _database.get)(dbRef, 'teams');\n\n          case 3:\n            snapshot = _context.sent;\n            return _context.abrupt(\"return\", snapshot.val()['teams']);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getTeams.apply(this, arguments);\n}\n\nfunction getStats() {\n  return _getStats.apply(this, arguments);\n}\n\nfunction _getStats() {\n  _getStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var teams, colors, scores, last_egg_time, team_eggs, eggs_remaining, t, ind, _i, _Object$entries, _Object$entries$_i, k, team, _i2, _Object$entries2, _Object$entries2$_i, _, egg, finder, found_time, sorted_teams;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getTeams();\n\n          case 2:\n            teams = _context2.sent;\n            // https://mokole.com/palette.html\n            colors = (0, _distinctColors.default)(Object.keys(teams).length);\n            scores = {};\n            last_egg_time = {};\n            team_eggs = {};\n            eggs_remaining = 0;\n\n            for (t in teams) {\n              if (t != \"GMs\") {\n                scores[t] = 0;\n                last_egg_time[t] = null;\n                team_eggs[t] = 0;\n              }\n            }\n\n            ind = 0;\n            _i = 0, _Object$entries = Object.entries(teams);\n\n          case 11:\n            if (!(_i < _Object$entries.length)) {\n              _context2.next = 32;\n              break;\n            }\n\n            _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), k = _Object$entries$_i[0], team = _Object$entries$_i[1];\n            _i2 = 0, _Object$entries2 = Object.entries(team.eggs);\n\n          case 14:\n            if (!(_i2 < _Object$entries2.length)) {\n              _context2.next = 27;\n              break;\n            }\n\n            _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2), _ = _Object$entries2$_i[0], egg = _Object$entries2$_i[1];\n            finder = egg.finder;\n            found_time = egg.found_time;\n\n            if (finder) {\n              _context2.next = 21;\n              break;\n            }\n\n            eggs_remaining++;\n            return _context2.abrupt(\"continue\", 24);\n\n          case 21:\n            scores[finder]++;\n\n            if (k != \"GMs\") {\n              team_eggs[finder]++;\n            }\n\n            if (time_in_minutes(found_time) > time_in_minutes(last_egg_time[finder])) {\n              last_egg_time[finder] = found_time;\n            }\n\n          case 24:\n            _i2++;\n            _context2.next = 14;\n            break;\n\n          case 27:\n            team['color'] = colors[ind];\n            ind++;\n\n          case 29:\n            _i++;\n            _context2.next = 11;\n            break;\n\n          case 32:\n            sorted_teams = Object.keys(teams).filter(function (value, index, arr) {\n              return value != \"GMs\";\n            });\n            sorted_teams.sort(function (a, b) {\n              if (scores[a] != scores[b]) {\n                return scores[a] > scores[b] ? -1 : 1;\n              }\n\n              var mins_a = time_in_minutes(last_egg_time[a]);\n              var mins_b = time_in_minutes(last_egg_time[b]);\n\n              if (mins_a != mins_b) {\n                return mins_a < mins_b ? -1 : 1;\n              }\n\n              return a < b ? -1 : 1;\n            });\n            return _context2.abrupt(\"return\", [scores, eggs_remaining, last_egg_time, sorted_teams, team_eggs, teams]);\n\n          case 35:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getStats.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"processing.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"processing.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"processing.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":47},"source":"processing.js","original":{"line":2,"column":0}},{"generated":{"line":36,"column":0},"source":"processing.js","original":{"line":5,"column":0}},{"generated":{"line":36,"column":9},"source":"processing.js","original":{"line":5,"column":9},"name":"time_in_minutes"},{"generated":{"line":36,"column":24},"source":"processing.js","original":{"line":5,"column":0}},{"generated":{"line":36,"column":25},"source":"processing.js","original":{"line":5,"column":25},"name":"timestr"},{"generated":{"line":36,"column":32},"source":"processing.js","original":{"line":5,"column":0}},{"generated":{"line":36,"column":34},"source":"processing.js","original":{"line":5,"column":34}},{"generated":{"line":37,"column":2},"source":"processing.js","original":{"line":6,"column":2}},{"generated":{"line":37,"column":6},"source":"processing.js","original":{"line":6,"column":6}},{"generated":{"line":37,"column":7},"source":"processing.js","original":{"line":6,"column":7},"name":"timestr"},{"generated":{"line":37,"column":14},"source":"processing.js","original":{"line":6,"column":2}},{"generated":{"line":37,"column":16},"source":"processing.js","original":{"line":6,"column":16}},{"generated":{"line":38,"column":4},"source":"processing.js","original":{"line":7,"column":4}},{"generated":{"line":38,"column":11},"source":"processing.js","original":{"line":7,"column":11}},{"generated":{"line":38,"column":12},"source":"processing.js","original":{"line":7,"column":12}},{"generated":{"line":38,"column":13},"source":"processing.js","original":{"line":7,"column":4}},{"generated":{"line":39,"column":2},"source":"processing.js","original":{"line":8,"column":3}},{"generated":{"line":41,"column":2},"source":"processing.js","original":{"line":9,"column":2}},{"generated":{"line":41,"column":6},"source":"processing.js","original":{"line":9,"column":6},"name":"hrs_mins"},{"generated":{"line":41,"column":14},"source":"processing.js","original":{"line":9,"column":14}},{"generated":{"line":41,"column":17},"source":"processing.js","original":{"line":9,"column":17},"name":"timestr"},{"generated":{"line":41,"column":24},"source":"processing.js","original":{"line":9,"column":24}},{"generated":{"line":41,"column":25},"source":"processing.js","original":{"line":9,"column":25},"name":"split"},{"generated":{"line":41,"column":30},"source":"processing.js","original":{"line":9,"column":17}},{"generated":{"line":41,"column":31},"source":"processing.js","original":{"line":9,"column":31}},{"generated":{"line":41,"column":34},"source":"processing.js","original":{"line":9,"column":17}},{"generated":{"line":41,"column":35},"source":"processing.js","original":{"line":9,"column":2}},{"generated":{"line":42,"column":2},"source":"processing.js","original":{"line":10,"column":2}},{"generated":{"line":42,"column":6},"source":"processing.js","original":{"line":10,"column":6},"name":"hrs"},{"generated":{"line":42,"column":9},"source":"processing.js","original":{"line":10,"column":9}},{"generated":{"line":42,"column":12},"source":"processing.js","original":{"line":10,"column":12},"name":"parseInt"},{"generated":{"line":42,"column":20},"source":"processing.js","original":{"line":10,"column":20}},{"generated":{"line":42,"column":21},"source":"processing.js","original":{"line":10,"column":21},"name":"hrs_mins"},{"generated":{"line":42,"column":29},"source":"processing.js","original":{"line":10,"column":29}},{"generated":{"line":42,"column":30},"source":"processing.js","original":{"line":10,"column":30}},{"generated":{"line":42,"column":31},"source":"processing.js","original":{"line":10,"column":29}},{"generated":{"line":42,"column":32},"source":"processing.js","original":{"line":10,"column":20}},{"generated":{"line":42,"column":33},"source":"processing.js","original":{"line":10,"column":2}},{"generated":{"line":43,"column":2},"source":"processing.js","original":{"line":11,"column":2}},{"generated":{"line":43,"column":6},"source":"processing.js","original":{"line":11,"column":6},"name":"mins"},{"generated":{"line":43,"column":10},"source":"processing.js","original":{"line":11,"column":10}},{"generated":{"line":43,"column":13},"source":"processing.js","original":{"line":11,"column":13},"name":"parseInt"},{"generated":{"line":43,"column":21},"source":"processing.js","original":{"line":11,"column":21}},{"generated":{"line":43,"column":22},"source":"processing.js","original":{"line":11,"column":22},"name":"hrs_mins"},{"generated":{"line":43,"column":30},"source":"processing.js","original":{"line":11,"column":30}},{"generated":{"line":43,"column":31},"source":"processing.js","original":{"line":11,"column":31}},{"generated":{"line":43,"column":32},"source":"processing.js","original":{"line":11,"column":30}},{"generated":{"line":43,"column":33},"source":"processing.js","original":{"line":11,"column":21}},{"generated":{"line":43,"column":34},"source":"processing.js","original":{"line":11,"column":2}},{"generated":{"line":44,"column":2},"source":"processing.js","original":{"line":12,"column":2}},{"generated":{"line":44,"column":9},"source":"processing.js","original":{"line":12,"column":9}},{"generated":{"line":44,"column":14},"source":"processing.js","original":{"line":12,"column":14},"name":"hrs"},{"generated":{"line":44,"column":17},"source":"processing.js","original":{"line":12,"column":9}},{"generated":{"line":44,"column":20},"source":"processing.js","original":{"line":12,"column":20},"name":"mins"},{"generated":{"line":44,"column":24},"source":"processing.js","original":{"line":12,"column":2}},{"generated":{"line":45,"column":0},"source":"processing.js","original":{"line":13,"column":1}},{"generated":{"line":47,"column":9},"source":"processing.js","original":{"line":14,"column":15},"name":"getTeams"},{"generated":{"line":52,"column":73},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":53,"column":4},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":54,"column":4},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":55,"column":6},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":56,"column":8},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":57,"column":10},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":58,"column":12},"source":"processing.js","original":{"line":15,"column":8},"name":"dbRef"},{"generated":{"line":58,"column":17},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":58,"column":20},"source":"processing.js","original":{"line":15,"column":16}},{"generated":{"line":58,"column":24},"source":"processing.js","original":{"line":15,"column":16},"name":"ref"},{"generated":{"line":58,"column":37},"source":"processing.js","original":{"line":15,"column":16}},{"generated":{"line":58,"column":39},"source":"processing.js","original":{"line":15,"column":20},"name":"db"},{"generated":{"line":58,"column":51},"source":"processing.js","original":{"line":15,"column":16}},{"generated":{"line":58,"column":52},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":59,"column":12},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":60,"column":12},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":60,"column":19},"source":"processing.js","original":{"line":16,"column":25}},{"generated":{"line":60,"column":23},"source":"processing.js","original":{"line":16,"column":25},"name":"get"},{"generated":{"line":60,"column":36},"source":"processing.js","original":{"line":16,"column":25}},{"generated":{"line":60,"column":38},"source":"processing.js","original":{"line":16,"column":29},"name":"dbRef"},{"generated":{"line":60,"column":43},"source":"processing.js","original":{"line":16,"column":25}},{"generated":{"line":60,"column":45},"source":"processing.js","original":{"line":16,"column":36}},{"generated":{"line":60,"column":52},"source":"processing.js","original":{"line":16,"column":25}},{"generated":{"line":60,"column":53},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":62,"column":10},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":63,"column":12},"source":"processing.js","original":{"line":16,"column":8},"name":"snapshot"},{"generated":{"line":63,"column":20},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":64,"column":12},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":64,"column":45},"source":"processing.js","original":{"line":17,"column":9},"name":"snapshot"},{"generated":{"line":64,"column":53},"source":"processing.js","original":{"line":17,"column":17}},{"generated":{"line":64,"column":54},"source":"processing.js","original":{"line":17,"column":18},"name":"val"},{"generated":{"line":64,"column":57},"source":"processing.js","original":{"line":17,"column":9}},{"generated":{"line":64,"column":60},"source":"processing.js","original":{"line":17,"column":24}},{"generated":{"line":64,"column":67},"source":"processing.js","original":{"line":17,"column":9}},{"generated":{"line":64,"column":68},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":66,"column":10},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":67,"column":10},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":68,"column":12},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":69,"column":8},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":70,"column":6},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":71,"column":4},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":72,"column":2},"source":"processing.js","original":{"line":14,"column":0}},{"generated":{"line":76,"column":9},"source":"processing.js","original":{"line":20,"column":15},"name":"getStats"},{"generated":{"line":81,"column":73},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":82,"column":4},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":84,"column":4},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":85,"column":6},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":86,"column":8},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":87,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":88,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":89,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":89,"column":19},"source":"processing.js","original":{"line":21,"column":22},"name":"getTeams"},{"generated":{"line":89,"column":27},"source":"processing.js","original":{"line":21,"column":30}},{"generated":{"line":89,"column":29},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":91,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":92,"column":12},"source":"processing.js","original":{"line":21,"column":8},"name":"teams"},{"generated":{"line":92,"column":17},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":93,"column":12},"source":"processing.js","original":{"line":22,"column":2}},{"generated":{"line":94,"column":12},"source":"processing.js","original":{"line":23,"column":6},"name":"colors"},{"generated":{"line":94,"column":18},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":94,"column":21},"source":"processing.js","original":{"line":23,"column":15}},{"generated":{"line":94,"column":25},"source":"processing.js","original":{"line":23,"column":15},"name":"distinctColors"},{"generated":{"line":94,"column":48},"source":"processing.js","original":{"line":23,"column":15}},{"generated":{"line":94,"column":50},"source":"processing.js","original":{"line":23,"column":30},"name":"Object"},{"generated":{"line":94,"column":56},"source":"processing.js","original":{"line":23,"column":36}},{"generated":{"line":94,"column":57},"source":"processing.js","original":{"line":23,"column":37},"name":"keys"},{"generated":{"line":94,"column":61},"source":"processing.js","original":{"line":23,"column":30}},{"generated":{"line":94,"column":62},"source":"processing.js","original":{"line":23,"column":42},"name":"teams"},{"generated":{"line":94,"column":67},"source":"processing.js","original":{"line":23,"column":30}},{"generated":{"line":94,"column":69},"source":"processing.js","original":{"line":23,"column":49},"name":"length"},{"generated":{"line":94,"column":75},"source":"processing.js","original":{"line":23,"column":15}},{"generated":{"line":94,"column":76},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":95,"column":12},"source":"processing.js","original":{"line":25,"column":8},"name":"scores"},{"generated":{"line":95,"column":18},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":95,"column":21},"source":"processing.js","original":{"line":25,"column":17}},{"generated":{"line":95,"column":23},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":96,"column":12},"source":"processing.js","original":{"line":26,"column":8},"name":"last_egg_time"},{"generated":{"line":96,"column":25},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":96,"column":28},"source":"processing.js","original":{"line":26,"column":24}},{"generated":{"line":96,"column":30},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":97,"column":12},"source":"processing.js","original":{"line":27,"column":8},"name":"team_eggs"},{"generated":{"line":97,"column":21},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":97,"column":24},"source":"processing.js","original":{"line":27,"column":20}},{"generated":{"line":97,"column":26},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":98,"column":12},"source":"processing.js","original":{"line":28,"column":6},"name":"eggs_remaining"},{"generated":{"line":98,"column":26},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":98,"column":29},"source":"processing.js","original":{"line":28,"column":23}},{"generated":{"line":98,"column":30},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":100,"column":12},"source":"processing.js","original":{"line":30,"column":2}},{"generated":{"line":100,"column":17},"source":"processing.js","original":{"line":30,"column":11},"name":"t"},{"generated":{"line":100,"column":18},"source":"processing.js","original":{"line":30,"column":2}},{"generated":{"line":100,"column":22},"source":"processing.js","original":{"line":30,"column":16},"name":"teams"},{"generated":{"line":100,"column":27},"source":"processing.js","original":{"line":30,"column":2}},{"generated":{"line":100,"column":29},"source":"processing.js","original":{"line":30,"column":23}},{"generated":{"line":101,"column":14},"source":"processing.js","original":{"line":31,"column":4}},{"generated":{"line":101,"column":18},"source":"processing.js","original":{"line":31,"column":8},"name":"t"},{"generated":{"line":101,"column":19},"source":"processing.js","original":{"line":31,"column":9}},{"generated":{"line":101,"column":23},"source":"processing.js","original":{"line":31,"column":13}},{"generated":{"line":101,"column":28},"source":"processing.js","original":{"line":31,"column":4}},{"generated":{"line":101,"column":30},"source":"processing.js","original":{"line":31,"column":20}},{"generated":{"line":102,"column":16},"source":"processing.js","original":{"line":32,"column":6},"name":"scores"},{"generated":{"line":102,"column":22},"source":"processing.js","original":{"line":32,"column":12}},{"generated":{"line":102,"column":23},"source":"processing.js","original":{"line":32,"column":13},"name":"t"},{"generated":{"line":102,"column":24},"source":"processing.js","original":{"line":32,"column":12}},{"generated":{"line":102,"column":25},"source":"processing.js","original":{"line":32,"column":6}},{"generated":{"line":102,"column":28},"source":"processing.js","original":{"line":32,"column":18}},{"generated":{"line":102,"column":29},"source":"processing.js","original":{"line":32,"column":6}},{"generated":{"line":103,"column":16},"source":"processing.js","original":{"line":33,"column":6},"name":"last_egg_time"},{"generated":{"line":103,"column":29},"source":"processing.js","original":{"line":33,"column":19}},{"generated":{"line":103,"column":30},"source":"processing.js","original":{"line":33,"column":20},"name":"t"},{"generated":{"line":103,"column":31},"source":"processing.js","original":{"line":33,"column":19}},{"generated":{"line":103,"column":32},"source":"processing.js","original":{"line":33,"column":6}},{"generated":{"line":103,"column":35},"source":"processing.js","original":{"line":33,"column":25}},{"generated":{"line":103,"column":39},"source":"processing.js","original":{"line":33,"column":6}},{"generated":{"line":104,"column":16},"source":"processing.js","original":{"line":34,"column":6},"name":"team_eggs"},{"generated":{"line":104,"column":25},"source":"processing.js","original":{"line":34,"column":15}},{"generated":{"line":104,"column":26},"source":"processing.js","original":{"line":34,"column":16},"name":"t"},{"generated":{"line":104,"column":27},"source":"processing.js","original":{"line":34,"column":15}},{"generated":{"line":104,"column":28},"source":"processing.js","original":{"line":34,"column":6}},{"generated":{"line":104,"column":31},"source":"processing.js","original":{"line":34,"column":21}},{"generated":{"line":104,"column":32},"source":"processing.js","original":{"line":34,"column":6}},{"generated":{"line":105,"column":14},"source":"processing.js","original":{"line":35,"column":5}},{"generated":{"line":106,"column":12},"source":"processing.js","original":{"line":36,"column":3}},{"generated":{"line":108,"column":12},"source":"processing.js","original":{"line":37,"column":6},"name":"ind"},{"generated":{"line":108,"column":15},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":108,"column":18},"source":"processing.js","original":{"line":37,"column":12}},{"generated":{"line":108,"column":19},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":109,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":109,"column":38},"source":"processing.js","original":{"line":38,"column":24},"name":"Object"},{"generated":{"line":109,"column":44},"source":"processing.js","original":{"line":38,"column":30}},{"generated":{"line":109,"column":45},"source":"processing.js","original":{"line":38,"column":31},"name":"entries"},{"generated":{"line":109,"column":52},"source":"processing.js","original":{"line":38,"column":24}},{"generated":{"line":109,"column":53},"source":"processing.js","original":{"line":38,"column":39},"name":"teams"},{"generated":{"line":109,"column":58},"source":"processing.js","original":{"line":38,"column":24}},{"generated":{"line":109,"column":59},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":111,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":112,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":113,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":114,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":115,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":117,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":117,"column":73},"source":"processing.js","original":{"line":38,"column":12},"name":"k"},{"generated":{"line":117,"column":74},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":117,"column":100},"source":"processing.js","original":{"line":38,"column":15},"name":"team"},{"generated":{"line":117,"column":104},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":118,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":118,"column":40},"source":"processing.js","original":{"line":39,"column":25},"name":"Object"},{"generated":{"line":118,"column":46},"source":"processing.js","original":{"line":39,"column":31}},{"generated":{"line":118,"column":47},"source":"processing.js","original":{"line":39,"column":32},"name":"entries"},{"generated":{"line":118,"column":54},"source":"processing.js","original":{"line":39,"column":25}},{"generated":{"line":118,"column":55},"source":"processing.js","original":{"line":39,"column":40},"name":"team"},{"generated":{"line":118,"column":59},"source":"processing.js","original":{"line":39,"column":44}},{"generated":{"line":118,"column":60},"source":"processing.js","original":{"line":39,"column":45},"name":"eggs"},{"generated":{"line":118,"column":64},"source":"processing.js","original":{"line":39,"column":25}},{"generated":{"line":118,"column":65},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":120,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":121,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":122,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":123,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":124,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":126,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":126,"column":76},"source":"processing.js","original":{"line":39,"column":14},"name":"_"},{"generated":{"line":126,"column":77},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":126,"column":104},"source":"processing.js","original":{"line":39,"column":17},"name":"egg"},{"generated":{"line":126,"column":107},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":127,"column":12},"source":"processing.js","original":{"line":40,"column":10},"name":"finder"},{"generated":{"line":127,"column":18},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":127,"column":21},"source":"processing.js","original":{"line":40,"column":19},"name":"egg"},{"generated":{"line":127,"column":24},"source":"processing.js","original":{"line":40,"column":22}},{"generated":{"line":127,"column":25},"source":"processing.js","original":{"line":40,"column":23},"name":"finder"},{"generated":{"line":127,"column":31},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":128,"column":12},"source":"processing.js","original":{"line":41,"column":10},"name":"found_time"},{"generated":{"line":128,"column":22},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":128,"column":25},"source":"processing.js","original":{"line":41,"column":23},"name":"egg"},{"generated":{"line":128,"column":28},"source":"processing.js","original":{"line":41,"column":26}},{"generated":{"line":128,"column":29},"source":"processing.js","original":{"line":41,"column":27},"name":"found_time"},{"generated":{"line":128,"column":39},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":130,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":130,"column":16},"source":"processing.js","original":{"line":42,"column":11},"name":"finder"},{"generated":{"line":130,"column":22},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":131,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":132,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":133,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":135,"column":12},"source":"processing.js","original":{"line":43,"column":8},"name":"eggs_remaining"},{"generated":{"line":135,"column":26},"source":"processing.js","original":{"line":43,"column":22}},{"generated":{"line":136,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":138,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":139,"column":12},"source":"processing.js","original":{"line":46,"column":6},"name":"scores"},{"generated":{"line":139,"column":18},"source":"processing.js","original":{"line":46,"column":12}},{"generated":{"line":139,"column":19},"source":"processing.js","original":{"line":46,"column":13},"name":"finder"},{"generated":{"line":139,"column":25},"source":"processing.js","original":{"line":46,"column":12}},{"generated":{"line":139,"column":26},"source":"processing.js","original":{"line":46,"column":6}},{"generated":{"line":141,"column":12},"source":"processing.js","original":{"line":47,"column":6}},{"generated":{"line":141,"column":16},"source":"processing.js","original":{"line":47,"column":10},"name":"k"},{"generated":{"line":141,"column":17},"source":"processing.js","original":{"line":47,"column":11}},{"generated":{"line":141,"column":21},"source":"processing.js","original":{"line":47,"column":15}},{"generated":{"line":141,"column":26},"source":"processing.js","original":{"line":47,"column":6}},{"generated":{"line":141,"column":28},"source":"processing.js","original":{"line":47,"column":22}},{"generated":{"line":142,"column":14},"source":"processing.js","original":{"line":48,"column":8},"name":"team_eggs"},{"generated":{"line":142,"column":23},"source":"processing.js","original":{"line":48,"column":17}},{"generated":{"line":142,"column":24},"source":"processing.js","original":{"line":48,"column":18},"name":"finder"},{"generated":{"line":142,"column":30},"source":"processing.js","original":{"line":48,"column":17}},{"generated":{"line":142,"column":31},"source":"processing.js","original":{"line":48,"column":8}},{"generated":{"line":143,"column":12},"source":"processing.js","original":{"line":49,"column":7}},{"generated":{"line":145,"column":12},"source":"processing.js","original":{"line":50,"column":6}},{"generated":{"line":145,"column":16},"source":"processing.js","original":{"line":50,"column":10},"name":"time_in_minutes"},{"generated":{"line":145,"column":31},"source":"processing.js","original":{"line":50,"column":25}},{"generated":{"line":145,"column":32},"source":"processing.js","original":{"line":50,"column":26},"name":"found_time"},{"generated":{"line":145,"column":42},"source":"processing.js","original":{"line":50,"column":25}},{"generated":{"line":145,"column":43},"source":"processing.js","original":{"line":50,"column":10}},{"generated":{"line":145,"column":46},"source":"processing.js","original":{"line":51,"column":8},"name":"time_in_minutes"},{"generated":{"line":145,"column":61},"source":"processing.js","original":{"line":51,"column":23}},{"generated":{"line":145,"column":62},"source":"processing.js","original":{"line":51,"column":24},"name":"last_egg_time"},{"generated":{"line":145,"column":75},"source":"processing.js","original":{"line":51,"column":37}},{"generated":{"line":145,"column":76},"source":"processing.js","original":{"line":51,"column":38},"name":"finder"},{"generated":{"line":145,"column":82},"source":"processing.js","original":{"line":51,"column":37}},{"generated":{"line":145,"column":83},"source":"processing.js","original":{"line":51,"column":23}},{"generated":{"line":145,"column":84},"source":"processing.js","original":{"line":50,"column":6}},{"generated":{"line":145,"column":86},"source":"processing.js","original":{"line":51,"column":48}},{"generated":{"line":146,"column":14},"source":"processing.js","original":{"line":52,"column":8},"name":"last_egg_time"},{"generated":{"line":146,"column":27},"source":"processing.js","original":{"line":52,"column":21}},{"generated":{"line":146,"column":28},"source":"processing.js","original":{"line":52,"column":22},"name":"finder"},{"generated":{"line":146,"column":34},"source":"processing.js","original":{"line":52,"column":21}},{"generated":{"line":146,"column":35},"source":"processing.js","original":{"line":52,"column":8}},{"generated":{"line":146,"column":38},"source":"processing.js","original":{"line":52,"column":32},"name":"found_time"},{"generated":{"line":146,"column":48},"source":"processing.js","original":{"line":52,"column":8}},{"generated":{"line":147,"column":12},"source":"processing.js","original":{"line":53,"column":7}},{"generated":{"line":149,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":150,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":151,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":152,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":154,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":155,"column":12},"source":"processing.js","original":{"line":55,"column":4},"name":"team"},{"generated":{"line":155,"column":16},"source":"processing.js","original":{"line":55,"column":8}},{"generated":{"line":155,"column":17},"source":"processing.js","original":{"line":55,"column":9}},{"generated":{"line":155,"column":24},"source":"processing.js","original":{"line":55,"column":8}},{"generated":{"line":155,"column":25},"source":"processing.js","original":{"line":55,"column":4}},{"generated":{"line":155,"column":28},"source":"processing.js","original":{"line":55,"column":20},"name":"colors"},{"generated":{"line":155,"column":34},"source":"processing.js","original":{"line":55,"column":26}},{"generated":{"line":155,"column":35},"source":"processing.js","original":{"line":55,"column":27},"name":"ind"},{"generated":{"line":155,"column":38},"source":"processing.js","original":{"line":55,"column":26}},{"generated":{"line":155,"column":39},"source":"processing.js","original":{"line":55,"column":4}},{"generated":{"line":156,"column":12},"source":"processing.js","original":{"line":56,"column":4},"name":"ind"},{"generated":{"line":156,"column":15},"source":"processing.js","original":{"line":56,"column":7}},{"generated":{"line":158,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":159,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":160,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":161,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":163,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":164,"column":12},"source":"processing.js","original":{"line":59,"column":8},"name":"sorted_teams"},{"generated":{"line":164,"column":24},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":164,"column":27},"source":"processing.js","original":{"line":59,"column":23},"name":"Object"},{"generated":{"line":164,"column":33},"source":"processing.js","original":{"line":59,"column":29}},{"generated":{"line":164,"column":34},"source":"processing.js","original":{"line":59,"column":30},"name":"keys"},{"generated":{"line":164,"column":38},"source":"processing.js","original":{"line":59,"column":23}},{"generated":{"line":164,"column":39},"source":"processing.js","original":{"line":59,"column":35},"name":"teams"},{"generated":{"line":164,"column":44},"source":"processing.js","original":{"line":59,"column":23}},{"generated":{"line":164,"column":46},"source":"processing.js","original":{"line":59,"column":42},"name":"filter"},{"generated":{"line":164,"column":52},"source":"processing.js","original":{"line":59,"column":23}},{"generated":{"line":164,"column":53},"source":"processing.js","original":{"line":59,"column":49}},{"generated":{"line":164,"column":63},"source":"processing.js","original":{"line":59,"column":59},"name":"value"},{"generated":{"line":164,"column":68},"source":"processing.js","original":{"line":59,"column":49}},{"generated":{"line":164,"column":70},"source":"processing.js","original":{"line":59,"column":66},"name":"index"},{"generated":{"line":164,"column":75},"source":"processing.js","original":{"line":59,"column":49}},{"generated":{"line":164,"column":77},"source":"processing.js","original":{"line":59,"column":73},"name":"arr"},{"generated":{"line":164,"column":80},"source":"processing.js","original":{"line":59,"column":49}},{"generated":{"line":164,"column":82},"source":"processing.js","original":{"line":59,"column":78}},{"generated":{"line":165,"column":14},"source":"processing.js","original":{"line":60,"column":4}},{"generated":{"line":165,"column":21},"source":"processing.js","original":{"line":60,"column":11},"name":"value"},{"generated":{"line":165,"column":26},"source":"processing.js","original":{"line":60,"column":16}},{"generated":{"line":165,"column":30},"source":"processing.js","original":{"line":60,"column":20}},{"generated":{"line":165,"column":35},"source":"processing.js","original":{"line":60,"column":4}},{"generated":{"line":166,"column":12},"source":"processing.js","original":{"line":61,"column":3}},{"generated":{"line":166,"column":13},"source":"processing.js","original":{"line":59,"column":23}},{"generated":{"line":166,"column":14},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":167,"column":12},"source":"processing.js","original":{"line":62,"column":2},"name":"sorted_teams"},{"generated":{"line":167,"column":24},"source":"processing.js","original":{"line":62,"column":14}},{"generated":{"line":167,"column":25},"source":"processing.js","original":{"line":62,"column":15},"name":"sort"},{"generated":{"line":167,"column":29},"source":"processing.js","original":{"line":62,"column":2}},{"generated":{"line":167,"column":30},"source":"processing.js","original":{"line":63,"column":4}},{"generated":{"line":167,"column":40},"source":"processing.js","original":{"line":63,"column":14},"name":"a"},{"generated":{"line":167,"column":41},"source":"processing.js","original":{"line":63,"column":4}},{"generated":{"line":167,"column":43},"source":"processing.js","original":{"line":63,"column":17},"name":"b"},{"generated":{"line":167,"column":44},"source":"processing.js","original":{"line":63,"column":4}},{"generated":{"line":167,"column":46},"source":"processing.js","original":{"line":63,"column":20}},{"generated":{"line":168,"column":14},"source":"processing.js","original":{"line":64,"column":6}},{"generated":{"line":168,"column":18},"source":"processing.js","original":{"line":64,"column":10},"name":"scores"},{"generated":{"line":168,"column":24},"source":"processing.js","original":{"line":64,"column":16}},{"generated":{"line":168,"column":25},"source":"processing.js","original":{"line":64,"column":17},"name":"a"},{"generated":{"line":168,"column":26},"source":"processing.js","original":{"line":64,"column":16}},{"generated":{"line":168,"column":27},"source":"processing.js","original":{"line":64,"column":10}},{"generated":{"line":168,"column":31},"source":"processing.js","original":{"line":64,"column":23},"name":"scores"},{"generated":{"line":168,"column":37},"source":"processing.js","original":{"line":64,"column":29}},{"generated":{"line":168,"column":38},"source":"processing.js","original":{"line":64,"column":30},"name":"b"},{"generated":{"line":168,"column":39},"source":"processing.js","original":{"line":64,"column":29}},{"generated":{"line":168,"column":40},"source":"processing.js","original":{"line":64,"column":6}},{"generated":{"line":168,"column":42},"source":"processing.js","original":{"line":64,"column":34}},{"generated":{"line":169,"column":16},"source":"processing.js","original":{"line":65,"column":8}},{"generated":{"line":169,"column":23},"source":"processing.js","original":{"line":65,"column":15},"name":"scores"},{"generated":{"line":169,"column":29},"source":"processing.js","original":{"line":65,"column":21}},{"generated":{"line":169,"column":30},"source":"processing.js","original":{"line":65,"column":22},"name":"a"},{"generated":{"line":169,"column":31},"source":"processing.js","original":{"line":65,"column":21}},{"generated":{"line":169,"column":32},"source":"processing.js","original":{"line":65,"column":15}},{"generated":{"line":169,"column":35},"source":"processing.js","original":{"line":65,"column":27},"name":"scores"},{"generated":{"line":169,"column":41},"source":"processing.js","original":{"line":65,"column":33}},{"generated":{"line":169,"column":42},"source":"processing.js","original":{"line":65,"column":34},"name":"b"},{"generated":{"line":169,"column":43},"source":"processing.js","original":{"line":65,"column":33}},{"generated":{"line":169,"column":44},"source":"processing.js","original":{"line":65,"column":15}},{"generated":{"line":169,"column":47},"source":"processing.js","original":{"line":65,"column":39}},{"generated":{"line":169,"column":48},"source":"processing.js","original":{"line":65,"column":40}},{"generated":{"line":169,"column":49},"source":"processing.js","original":{"line":65,"column":15}},{"generated":{"line":169,"column":52},"source":"processing.js","original":{"line":65,"column":44}},{"generated":{"line":169,"column":53},"source":"processing.js","original":{"line":65,"column":8}},{"generated":{"line":170,"column":14},"source":"processing.js","original":{"line":66,"column":7}},{"generated":{"line":172,"column":14},"source":"processing.js","original":{"line":67,"column":6}},{"generated":{"line":172,"column":18},"source":"processing.js","original":{"line":67,"column":10},"name":"mins_a"},{"generated":{"line":172,"column":24},"source":"processing.js","original":{"line":67,"column":16}},{"generated":{"line":172,"column":27},"source":"processing.js","original":{"line":67,"column":19},"name":"time_in_minutes"},{"generated":{"line":172,"column":42},"source":"processing.js","original":{"line":67,"column":34}},{"generated":{"line":172,"column":43},"source":"processing.js","original":{"line":67,"column":35},"name":"last_egg_time"},{"generated":{"line":172,"column":56},"source":"processing.js","original":{"line":67,"column":48}},{"generated":{"line":172,"column":57},"source":"processing.js","original":{"line":67,"column":49},"name":"a"},{"generated":{"line":172,"column":58},"source":"processing.js","original":{"line":67,"column":48}},{"generated":{"line":172,"column":59},"source":"processing.js","original":{"line":67,"column":34}},{"generated":{"line":172,"column":60},"source":"processing.js","original":{"line":67,"column":6}},{"generated":{"line":173,"column":14},"source":"processing.js","original":{"line":68,"column":6}},{"generated":{"line":173,"column":18},"source":"processing.js","original":{"line":68,"column":10},"name":"mins_b"},{"generated":{"line":173,"column":24},"source":"processing.js","original":{"line":68,"column":16}},{"generated":{"line":173,"column":27},"source":"processing.js","original":{"line":68,"column":19},"name":"time_in_minutes"},{"generated":{"line":173,"column":42},"source":"processing.js","original":{"line":68,"column":34}},{"generated":{"line":173,"column":43},"source":"processing.js","original":{"line":68,"column":35},"name":"last_egg_time"},{"generated":{"line":173,"column":56},"source":"processing.js","original":{"line":68,"column":48}},{"generated":{"line":173,"column":57},"source":"processing.js","original":{"line":68,"column":49},"name":"b"},{"generated":{"line":173,"column":58},"source":"processing.js","original":{"line":68,"column":48}},{"generated":{"line":173,"column":59},"source":"processing.js","original":{"line":68,"column":34}},{"generated":{"line":173,"column":60},"source":"processing.js","original":{"line":68,"column":6}},{"generated":{"line":175,"column":14},"source":"processing.js","original":{"line":69,"column":6}},{"generated":{"line":175,"column":18},"source":"processing.js","original":{"line":69,"column":10},"name":"mins_a"},{"generated":{"line":175,"column":24},"source":"processing.js","original":{"line":69,"column":16}},{"generated":{"line":175,"column":28},"source":"processing.js","original":{"line":69,"column":20},"name":"mins_b"},{"generated":{"line":175,"column":34},"source":"processing.js","original":{"line":69,"column":6}},{"generated":{"line":175,"column":36},"source":"processing.js","original":{"line":69,"column":28}},{"generated":{"line":176,"column":16},"source":"processing.js","original":{"line":70,"column":8}},{"generated":{"line":176,"column":23},"source":"processing.js","original":{"line":70,"column":15},"name":"mins_a"},{"generated":{"line":176,"column":29},"source":"processing.js","original":{"line":70,"column":21}},{"generated":{"line":176,"column":32},"source":"processing.js","original":{"line":70,"column":24},"name":"mins_b"},{"generated":{"line":176,"column":38},"source":"processing.js","original":{"line":70,"column":15}},{"generated":{"line":176,"column":41},"source":"processing.js","original":{"line":70,"column":33}},{"generated":{"line":176,"column":42},"source":"processing.js","original":{"line":70,"column":34}},{"generated":{"line":176,"column":43},"source":"processing.js","original":{"line":70,"column":15}},{"generated":{"line":176,"column":46},"source":"processing.js","original":{"line":70,"column":38}},{"generated":{"line":176,"column":47},"source":"processing.js","original":{"line":70,"column":8}},{"generated":{"line":177,"column":14},"source":"processing.js","original":{"line":71,"column":7}},{"generated":{"line":179,"column":14},"source":"processing.js","original":{"line":72,"column":6}},{"generated":{"line":179,"column":21},"source":"processing.js","original":{"line":72,"column":13},"name":"a"},{"generated":{"line":179,"column":22},"source":"processing.js","original":{"line":72,"column":14}},{"generated":{"line":179,"column":25},"source":"processing.js","original":{"line":72,"column":17},"name":"b"},{"generated":{"line":179,"column":26},"source":"processing.js","original":{"line":72,"column":13}},{"generated":{"line":179,"column":29},"source":"processing.js","original":{"line":72,"column":21}},{"generated":{"line":179,"column":30},"source":"processing.js","original":{"line":72,"column":22}},{"generated":{"line":179,"column":31},"source":"processing.js","original":{"line":72,"column":13}},{"generated":{"line":179,"column":34},"source":"processing.js","original":{"line":72,"column":26}},{"generated":{"line":179,"column":35},"source":"processing.js","original":{"line":72,"column":6}},{"generated":{"line":180,"column":12},"source":"processing.js","original":{"line":73,"column":5}},{"generated":{"line":180,"column":13},"source":"processing.js","original":{"line":62,"column":2}},{"generated":{"line":181,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":181,"column":46},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":47},"source":"processing.js","original":{"line":75,"column":10},"name":"scores"},{"generated":{"line":181,"column":53},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":55},"source":"processing.js","original":{"line":75,"column":18},"name":"eggs_remaining"},{"generated":{"line":181,"column":69},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":71},"source":"processing.js","original":{"line":75,"column":34},"name":"last_egg_time"},{"generated":{"line":181,"column":84},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":86},"source":"processing.js","original":{"line":75,"column":49},"name":"sorted_teams"},{"generated":{"line":181,"column":98},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":100},"source":"processing.js","original":{"line":75,"column":63},"name":"team_eggs"},{"generated":{"line":181,"column":109},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":111},"source":"processing.js","original":{"line":75,"column":74},"name":"teams"},{"generated":{"line":181,"column":116},"source":"processing.js","original":{"line":75,"column":9}},{"generated":{"line":181,"column":117},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":183,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":184,"column":10},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":185,"column":12},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":186,"column":8},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":187,"column":6},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":188,"column":4},"source":"processing.js","original":{"line":20,"column":0}},{"generated":{"line":189,"column":2},"source":"processing.js","original":{"line":20,"column":0}}],"sources":{"processing.js":"import distinctColors from 'distinct-colors'\nimport { ref, get } from '@firebase/database';\nimport { db } from './firebase'\n\nfunction time_in_minutes(timestr) {\n  if (!timestr) {\n    return -1;\n  }\n  var hrs_mins = timestr.split(\":\");\n  var hrs = parseInt(hrs_mins[0]);\n  var mins = parseInt(hrs_mins[1]);\n  return 60 * hrs + mins;\n}\nasync function getTeams() {\n  const dbRef = ref(db);\n  const snapshot = await get(dbRef, 'teams');\n  return snapshot.val()['teams']\n}\n\nasync function getStats() {\n  const teams = await getTeams()\n  // https://mokole.com/palette.html\n  let colors = distinctColors(Object.keys(teams).length)\n\n  const scores = {}\n  const last_egg_time = {}\n  const team_eggs = {}\n  let eggs_remaining = 0\n\n  for (let t in teams) {\n    if (t != \"GMs\") {\n      scores[t] = 0;\n      last_egg_time[t] = null;\n      team_eggs[t] = 0;\n    }\n  }\n  let ind = 0\n  for (let [k, team] of Object.entries(teams)) {\n    for (let [_, egg] of Object.entries(team.eggs)) {\n      var finder = egg.finder\n      var found_time = egg.found_time\n      if (!finder) {\n        eggs_remaining++;\n        continue;\n      }\n      scores[finder]++;\n      if (k != \"GMs\") {\n        team_eggs[finder]++;\n      }\n      if (time_in_minutes(found_time) >\n        time_in_minutes(last_egg_time[finder])) {\n        last_egg_time[finder] = found_time;\n      }\n    }\n    team['color'] = colors[ind]\n    ind++;\n  }\n\n  const sorted_teams = Object.keys(teams).filter(function (value, index, arr) {\n    return value != \"GMs\";\n  });\n  sorted_teams.sort(\n    function (a, b) {\n      if (scores[a] != scores[b]) {\n        return scores[a] > scores[b] ? -1 : 1;\n      }\n      var mins_a = time_in_minutes(last_egg_time[a]);\n      var mins_b = time_in_minutes(last_egg_time[b]);\n      if (mins_a != mins_b) {\n        return mins_a < mins_b ? -1 : 1;\n      }\n      return a < b ? -1 : 1;\n    }\n  );\n  return [scores, eggs_remaining, last_egg_time, sorted_teams, team_eggs, teams]\n}\n\nexport {getStats}\n"},"lineCount":null}},"error":null,"hash":"9526eb25bf837273587405007030909f","cacheData":{"env":{}}}