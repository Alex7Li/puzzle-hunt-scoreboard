{"id":"../../node_modules/mout/lang/deepClone.js","dependencies":[{"name":"/home/alex/git/puzzle-hunt-scoreboard/package.json","includedInParent":true,"mtime":1656819466853},{"name":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/package.json","includedInParent":true,"mtime":1656812115766},{"name":"./clone","loc":{"line":1,"column":20,"index":20},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepClone.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/clone.js"},{"name":"../object/forOwn","loc":{"line":2,"column":21,"index":53},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepClone.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/object/forOwn.js"},{"name":"./kindOf","loc":{"line":3,"column":21,"index":95},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepClone.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/kindOf.js"},{"name":"./isPlainObject","loc":{"line":4,"column":28,"index":136},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepClone.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/isPlainObject.js"}],"generated":{"js":"var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/mout/lang/deepClone.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../../node_modules/mout/lang/deepClone.js":"var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n"},"lineCount":49}},"error":null,"hash":"f43ddd6de09fb6a4ba6751cdf3a42d1f","cacheData":{"env":{}}}