{"id":"../../node_modules/mout/lang/deepEquals.js","dependencies":[{"name":"/home/alex/git/puzzle-hunt-scoreboard/package.json","includedInParent":true,"mtime":1656819466853},{"name":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/package.json","includedInParent":true,"mtime":1656812115766},{"name":"./is","loc":{"line":1,"column":17,"index":17},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepEquals.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/is.js"},{"name":"./isObject","loc":{"line":2,"column":23,"index":49},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepEquals.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/isObject.js"},{"name":"./isArray","loc":{"line":3,"column":22,"index":86},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepEquals.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/isArray.js"},{"name":"../object/equals","loc":{"line":4,"column":24,"index":124},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepEquals.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/object/equals.js"},{"name":"../array/equals","loc":{"line":5,"column":24,"index":169},"parent":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/lang/deepEquals.js","resolved":"/home/alex/git/puzzle-hunt-scoreboard/node_modules/mout/array/equals.js"}],"generated":{"js":"var is = require('./is');\nvar isObject = require('./isObject');\nvar isArray = require('./isArray');\nvar objEquals = require('../object/equals');\nvar arrEquals = require('../array/equals');\n\n    /**\n     * Recursively checks for same properties and values.\n     */\n    function deepEquals(a, b, callback){\n        callback = callback || is;\n\n        var bothObjects = isObject(a) && isObject(b);\n        var bothArrays = !bothObjects && isArray(a) && isArray(b);\n\n        if (!bothObjects && !bothArrays) {\n            return callback(a, b);\n        }\n\n        function compare(a, b){\n            return deepEquals(a, b, callback);\n        }\n\n        var method = bothObjects ? objEquals : arrEquals;\n        return method(a, b, compare);\n    }\n\n    module.exports = deepEquals;\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/mout/lang/deepEquals.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../../node_modules/mout/lang/deepEquals.js":"var is = require('./is');\nvar isObject = require('./isObject');\nvar isArray = require('./isArray');\nvar objEquals = require('../object/equals');\nvar arrEquals = require('../array/equals');\n\n    /**\n     * Recursively checks for same properties and values.\n     */\n    function deepEquals(a, b, callback){\n        callback = callback || is;\n\n        var bothObjects = isObject(a) && isObject(b);\n        var bothArrays = !bothObjects && isArray(a) && isArray(b);\n\n        if (!bothObjects && !bothArrays) {\n            return callback(a, b);\n        }\n\n        function compare(a, b){\n            return deepEquals(a, b, callback);\n        }\n\n        var method = bothObjects ? objEquals : arrEquals;\n        return method(a, b, compare);\n    }\n\n    module.exports = deepEquals;\n\n\n"},"lineCount":31}},"error":null,"hash":"6b13b3f50ef4a0d79102ae10713efd21","cacheData":{"env":{}}}